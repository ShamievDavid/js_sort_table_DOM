{"version":3,"sources":["scripts/main.js"],"names":["headerItems","document","querySelectorAll","tableRows","table","querySelector","sort","item","itemIndex","indexOf","target","sortedTable","row1","row2","textRow1","children","innerText","textRow2","isNaN","localeCompare","parseInt","replace","append","forEach","addEventListener"],"mappings":";AAAA,aA0BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxBD,IAAMA,EAAcC,SAASC,iBAAiB,YACxCC,EAAYF,SAASC,iBAAiB,YACtCE,EAAQH,SAASI,cAAc,SAMrC,SAASC,EAAKC,GACNC,IAAAA,EAAY,EAAIR,GAAaS,QAAQF,EAAKG,QAE1CC,EAAc,EAAIR,GAAWG,KAAK,SAACM,EAAMC,GACvCC,IAAAA,EAAWF,EAAKG,SAASP,GAAWQ,UACpCC,EAAWJ,EAAKE,SAASP,GAAWQ,UAEtCF,MAAgB,MAAhBA,EAAS,IAAeI,OAAOJ,GAK5BA,EAASK,cAAcF,GAJrBG,SAASN,EAASO,QAAQ,MAAO,KACtCD,SAASH,EAASI,QAAQ,MAAO,OAMvCjB,EAAMkB,OAANlB,MAAAA,EAAgBO,EAAAA,IAnBlBX,EAAYuB,QAAQ,SAAAhB,GAClBA,EAAKiB,iBAAiB,QAASlB","file":"main.93e0f56e.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst headerItems = document.querySelectorAll('thead th');\nconst tableRows = document.querySelectorAll('tbody tr');\nconst table = document.querySelector('tbody');\n\nheaderItems.forEach(item => {\n  item.addEventListener('click', sort);\n});\n\nfunction sort(item) {\n  const itemIndex = [...headerItems].indexOf(item.target);\n\n  const sortedTable = [...tableRows].sort((row1, row2) => {\n    const textRow1 = row1.children[itemIndex].innerText;\n    const textRow2 = row2.children[itemIndex].innerText;\n\n    if (textRow1[0] === '$' || !isNaN(+textRow1)) {\n      return parseInt(textRow1.replace(/\\D/g, ''))\n      - parseInt(textRow2.replace(/\\D/g, ''));\n    }\n\n    return textRow1.localeCompare(textRow2);\n  });\n\n  table.append(...sortedTable);\n}\n"]}